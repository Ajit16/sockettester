{"version":3,"sources":["components/socket-tab-items/socketTabItems.js","pages/main-page/index.js"],"names":["socket","SocketTabItem","props","startSocket","url","state","socketUrl","close","setState","message","io","transports","on","a","status","data","console","log","error","connectEvent","event","map","item","name","val","push","text","eventName","sendEvent","addEvent","values","newevent","handler","e","target","value","removeItem","index","findIndex","splice","Url","saveSocket","update","sendMesssage","messageText","emit","alert","clearAll","changeEventStatus","checked","this","show","id","className","length","type","placeholder","onChange","onClick","htmlFor","autoComplete","rows","key","defaultChecked","slice","src","collapsed","role","JSON","stringify","Component","connect","global","Global","Dashboard","DataVal","active","removeTab","activeItem","setTimeout","activeTab","currentTab","addNewTab","Math","random","updateData","lenght","title"],"mappings":"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","file":"static/js/4.72406cb0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ReactJson from 'react-json-view'\r\n// import {dashboard} from './../../action/actions';\r\nimport io from 'socket.io-client';\r\nimport './style.css';\r\n\r\nlet socket;\r\n\r\nclass SocketTabItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: {}, status: false, newevent: '', Url: '', error: '', sendEvent:'', messageText:'', message:[],  socketUrl:''\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({data:this.props.data, Url:this.props.data.url});\r\n  }\r\n \r\n  UNSAFE_componentWillReceiveProps(props){\r\n    if(props.show !== this.state.data.id)\r\n      this.setState({status: false})\r\n    return true\r\n  }\r\n\r\n\r\n  startSocket = (url) => {\r\n    // console.log(url)\r\n    if(url !== this.state.socketUrl && this.state.socketUrl !== ''){\r\n      socket.close();\r\n      this.setState({ message: [] });\r\n    }\r\n    this.setState({socketUrl:url});\r\n    socket = io(url, {transports: ['websocket']});\r\n    socket.on('connect', async (message)=> {\r\n      //console.log(message);\r\n      this.setState({ status: true });\r\n    });\r\n\r\n    socket.on('error', (data) => { console.log(data); this.setState({ error: data, status: false }) });\r\n    socket.on('desconnect', (data) => {console.log(data); this.setState({ error: data, status: false }) });\r\n    socket.on('connect_error', (data) => {console.log(data); this.setState({ error: data, status: false }) });\r\n    this.connectEvent(this.state.data.event)\r\n  }\r\n\r\n  connectEvent=(data)=>{\r\n    data.map(item=>{\r\n      if(item.status === true)\r\n      {return socket.on(item.name, async (data) =>{ \r\n        //console.log(data)\r\n        let val = this.state.message;\r\n        val.push({text:data, eventName:item.name, sendEvent:this.state.sendEvent})\r\n        this.setState({message:val})\r\n      });\r\n      }\r\n      else return true;\r\n    })\r\n  }\r\n\r\n\r\n  addEvent = (item) => {\r\n    this.setState({message:[]})\r\n    let values = this.state.data;\r\n    values.event.push({ name: item, status: true })\r\n    this.setState({ data: values, newevent: '' })\r\n    socket.on(item, async (data) =>{ \r\n      console.log(data)\r\n      let val = this.state.message;\r\n      val.push({text:data, eventName:item, sendEvent:this.state.sendEvent})\r\n      this.setState({message:val})\r\n    });\r\n  }\r\n\r\n  handler = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  removeItem = (item) => {\r\n    let values = this.state.data;\r\n    let index = values.event.findIndex(val => val.name === item.name)\r\n    values.event.splice(index, 1)\r\n    this.setState({ data: values, message:[]})\r\n    socket.close();\r\n    this.startSocket(this.state.Url);\r\n  }\r\n\r\n  saveSocket = (data) => {\r\n    data.url = this.state.Url;\r\n    this.props.update(data);\r\n  }\r\n\r\n  // Send message\r\n  sendMesssage=()=>{\r\n    if(this.state.sendEvent && this.state.messageText !== '')\r\n      socket.emit(this.state.sendEvent, this.state.messageText);\r\n    else alert('Please enter valid value in send event or message field')\r\n  }\r\n\r\n  clearAll=()=>{\r\n    this.setState({sendEvent:'', messageText:''})\r\n  }\r\n\r\n  changeEventStatus=(item, val)=>{\r\n    // console.log(item,val.target.checked)\r\n    let values = this.state.data;\r\n    let index = values.event.findIndex(val => val.name === item.name)\r\n    values.event[index].status = val.target.checked;\r\n    this.setState({data:values, message:[]})\r\n    socket.close();\r\n    this.startSocket(this.state.Url);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log('unmount')\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { data, status, newevent, Url, error, sendEvent, messageText, message} = this.state;\r\n    const { show } = this.props;\r\n    const event = data.event ? data.event : [];\r\n\r\n    return (\r\n      <div className={(show === data.id ? '' : 'd-none') + \" tabitem\"}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\" id=\"btnGroupAddon\">\r\n                    <i className={(status || message.length !== 0 ? 'text-primary' : 'text-gray') + \" material-icons\"}>signal_wifi_4_bar</i>\r\n                    {/* <!-- sync_alt --> */}\r\n                  </div>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Socket Url\" value={Url} name=\"Url\" onChange={this.handler} />\r\n                <div className=\"input-group-append\">\r\n                  <button className=\"btn btn-silver\" type=\"button\" id=\"button-addon2\" onClick={() => this.startSocket(Url)}>Connect</button>\r\n                  <button className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\" onClick={() => this.saveSocket(data)}>Save</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={(status ? '' : '') + \" row mx-n1\"}>\r\n            {/*d-none <!-- Left side --> */}\r\n            <div className=\"col-sm-4 col-md-3 p-1\">\r\n              <div className=\"p-2 bg-light leftside shadow-sm\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputEmail1\">Send Message</label>\r\n                  <input className=\"form-control\" placeholder=\"Event Name\" value={sendEvent} name=\"sendEvent\" onChange={this.handler} autoComplete=\"false\"/>\r\n                  {/* <!-- <small id=\"emailHelp\" className=\"form-text text-muted\">Select event.</small> --> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea className=\"form-control\" rows=\"5\" placeholder=\"Message\" name=\"messageText\" value={messageText} onChange={this.handler}></textarea>\r\n                </div>\r\n                <div className=\"row mx-n1 \">\r\n                  <div className=\"col-8 mb-1 p-1\">\r\n                    <button className=\"btn btn-sm btn-primary btn-block\" onClick={this.sendMesssage}>Send Message</button>\r\n                  </div>\r\n                  <div className=\"col-4 mb-1 p-1\">\r\n                    <button className=\"btn btn-sm btn-danger btn-block\" onClick={this.clearAll}>Clear</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"input-group \">\r\n                  <input type=\"text\" className=\"form-control\" value={newevent} name=\"newevent\" placeholder=\"Event Name\" onChange={this.handler} />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-silver\" type=\"button\" onClick={() => this.addEvent(newevent)}>Add</button>\r\n                  </div>\r\n                </div>\r\n                <ul className=\"list-group mt-2\">\r\n                  {event.map((item, index) =>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center p-2\" key={index}>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <label className=\"m-0 checkboxItem\">\r\n                            <input type=\"checkbox\" defaultChecked={item.status} onChange={(e)=>this.changeEventStatus(item, e)}/>\r\n                            <i className=\"material-icons\">stop</i>\r\n                        </label>\r\n                        {item.name}\r\n                      </div>\r\n                      <span className=\"d-flex\"><i className=\"material-icons\" onClick={() => this.removeItem(item)}>clear</i></span>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- Right side --> */}\r\n            <div className=\"col-sm-8 col-md-9 p-1 \">\r\n              <div className=\"p-2 bg-light shadow-sm h-100\">\r\n                <div className=\"mesgs\">                  \r\n                  {/* <div className=\"incoming_msg\">\r\n                    <div className=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /> </div>\r\n                    <div className=\"received_msg\">\r\n                      <div className=\"received_withd_msg\">\r\n                        <p>Test, which is a new approach to have</p>\r\n                        <span className=\"info_date\"> 11:01 AM    |    Yesterday</span></div>\r\n                    </div>\r\n                  </div> */}\r\n                  {message.map((item,index)=><div className=\"incoming_msg\" key={index}>\r\n                    <div className=\"userImage\">\r\n                      <span>{item.eventName.slice(0, 2)}</span>\r\n                    </div>\r\n                    <div className=\"msgbox\">\r\n                      <pre><ReactJson src={item.text} collapsed={true} /></pre>\r\n                      {/* <pre><code>{JSON.stringify(item.text, undefined, 2)}</code></pre> */}\r\n                      {/* typeof(item.text)===\"object\" ? JSON.stringify(item.text):  */}\r\n                      <span className=\"info_data\">{item.eventName} | {item.sendEvent}</span> </div>\r\n                  </div>)}\r\n\r\n                  {!status && message.length === 0 ? <pre className=\"alert alert-danger\" role=\"alert\">{JSON.stringify(error || \"Call Socket Url\")}</pre>:''}\r\n\r\n\r\n                  {/* {message.map((item,index)=><div className=\"outgoing_msg\" key={index}>\r\n                    <div className=\"userImage\">\r\n                      <span>{item.eventName.slice(0, 2)}</span>\r\n                    </div>\r\n                    <div className=\"sent_msg\">\r\n                      <pre><ReactJson src={item.text} collapsed={true} /></pre>\r\n                      {/* <pre><code>{JSON.stringify(item.text, undefined, 2)}</code></pre> */}\r\n                      {/* typeof(item.text)===\"object\" ? JSON.stringify(item.text):  *-/}\r\n                      <span className=\"info_data\">{item.eventName} | {item.sendEvent}</span> </div>\r\n                  </div>)} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className={(status ? 'd-none' : '') + \" row\"}>\r\n            <div className=\"col\">\r\n              <pre className=\"alert alert-danger\" role=\"alert\">{JSON.stringify(error || \"Call Socket Url\")}</pre>\r\n            </div>\r\n          </div> */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    global: state.Global,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SocketTabItem);\r\n","import React, { Component } from 'react';\r\n// import {Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n// import {dashboard} from './../../action/actions';\r\nimport SocketTabItem from '../../components/socket-tab-items/socketTabItems'\r\nimport './style.css';\r\n\r\nconst data = [\r\n    { id: 0, url: 'http://10.10.30.110:8086', event: [{ name: 'ajitres', status: true }] },\r\n    { id: 1, url: 'http://onchainnow.com:5000', event: [{ name: 'findDashBoard', status: true }] },    \r\n]\r\n\r\nclass Dashboard extends Component {\r\n    state = { DataVal: data, active: '' };\r\n\r\n    UNSAFE_componentWillMount () {\r\n      \r\n      if( this.state.DataVal.lenght > 0)\r\n      { this.setState({ active: this.state.DataVal[0].id}) }\r\n      else\r\n      { this. addNewTab() }\r\n\r\n    }\r\n\r\n    // remove Tab \r\n    removeTab = (item) => {\r\n        let data = this.state.DataVal;\r\n        let index = data.findIndex(val => val.id === item.id)\r\n        data.splice(index, 1)\r\n        this.setState({ DataVal: data })\r\n        if (data.findIndex(val => val.id === this.state.active) === -1) {\r\n            let activeItem = data.length > 1 ? data[index - 1].id : data[0].id;\r\n            setTimeout(() => this.activeTab(activeItem), 100);\r\n        }\r\n        else {\r\n            let currentTab = data[data.findIndex(val => val.id === this.state.active)].id;\r\n            setTimeout(() => this.activeTab(currentTab), 100);\r\n        }\r\n    }\r\n\r\n    // Add new Tab\r\n    addNewTab = () => {\r\n        let data = this.state.DataVal;\r\n        let id = Math.random();\r\n        data.push({ url: '', event: [], id: id })\r\n        this.setState({ DataVal: data, active: id })\r\n    }\r\n\r\n    // Update data\r\n    updateData = (item) => {\r\n        // console.log(item);\r\n        let data = this.state.DataVal;\r\n        let index = data.findIndex(val => val.id === item.id)\r\n        data[index].url = item.url;\r\n        this.setState({ DataVal: data })\r\n    }\r\n\r\n    // Active tab\r\n    activeTab=(id)=> this.setState({ active: id })\r\n\r\n    render() {\r\n        const { DataVal, active } = this.state;\r\n        return (\r\n            <div className=\"container-fluid pt-3 pb-3\">\r\n                <div className=\"card border-0\">\r\n                    <div className=\"card-header p-0 shadow-none bg-light\">\r\n                        <div className=\"tabboxs d-flex flex-row justify-content-start align-items-stretch\">\r\n                            <ul className=\"tabs d-flex flex-nowrap m-0 p-0\">\r\n                                {DataVal.map((item, index) => <li onClick={() => this.activeTab(item.id)} className={(active === item.id ? 'active' : '') + \" d-flex\"} key={item.id} title={item.url || 'Socket Url'}>\r\n                                    <span>{item.url || 'Socket Url'}</span>\r\n                                    <i className=\"material-icons\" onClick={() => this.removeTab(item)}>clear</i>\r\n                                </li>)}\r\n                            </ul>\r\n                            <div className=\"addtabs\">\r\n                                <i className=\"bg-silver text-white material-icons\" onClick={this.addNewTab}>add</i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body pl-0 pr-0\">\r\n                        {DataVal.map((item, index) =>\r\n                            <SocketTabItem data={item} show={active} update={this.updateData} key={item.id} className=\"customshow\" />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        global: state.Global,\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);"],"sourceRoot":""}