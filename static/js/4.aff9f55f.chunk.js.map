{"version":3,"sources":["components/socket-tab-items/socketTabItems.js","pages/main-page/index.js"],"names":["SocketTabItem","props","startSocket","url","state","socketUrl","socket","close","setState","message","io","transports","on","a","status","this","data","console","log","error","connectEvent","event","saveSocket","map","item","name","isJson","val","push","text","DataReturn","eventName","is_JSON","type","str","Function","e","addEvent","connected","length","values","find","datares","alert","newevent","handler","target","value","removeItem","index","findIndex","splice","Url","update","sendMesssage","is_active","sendEvent","messageText","emit","clearAll","changeEventStatus","checked","closeSocket","socketName","show","id","className","htmlFor","placeholder","onChange","onClick","autoComplete","rows","key","defaultChecked","style","fontSize","src","collapsed","role","JSON","stringify","Component","connect","global","Global","Dashboard","DataVal","active","removeTab","activeItem","setTimeout","activeTab","currentTab","addNewTab","Math","random","updateData","lenght","title"],"mappings":"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","file":"static/js/4.aff9f55f.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ReactJson from 'react-json-view'\r\n// import {dashboard} from './../../action/actions';\r\nimport io from 'socket.io-client';\r\nimport './style.css';\r\n\r\n//let socket;\r\n\r\nclass SocketTabItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: {}, status: false, newevent: '', Url: '', error: '', sendEvent:'', messageText:'', message:[],  socketUrl:''\r\n    };\r\n    \r\n    this.socket = this.props.socketName;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data, Url:this.props.data.url});\r\n  }\r\n \r\n  UNSAFE_componentWillReceiveProps(props){\r\n    if(props.show !== this.state.data.id)\r\n      this.setState({status: false})\r\n    return true\r\n  }\r\n\r\n\r\n  startSocket = (url) => {\r\n    // console.log(url)\r\n    if(url !== this.state.socketUrl && this.state.socketUrl !== ''){\r\n      this.socket.close();\r\n      this.setState({ message: [] });\r\n    }\r\n    this.setState({socketUrl:url});\r\n    this.socket = io(url, {transports: ['websocket']});\r\n    this.socket.on('connect', async (message)=> {\r\n      this.setState({ status: true });\r\n    });\r\n\r\n    this.socket.on('error', (data) => { console.log(data); this.setState({ error: data, status: false }) });\r\n    this.socket.on('desconnect', (data) => {console.log(data); this.setState({ error: data, status: false }) });\r\n    this.socket.on('connect_error', (data) => {console.log(data); this.setState({ error: data, status: false }) });\r\n    this.connectEvent(this.state.data.event)\r\n    \r\n    //change tab name\r\n    this.saveSocket()\r\n  }\r\n\r\n  connectEvent=(data)=>{\r\n    //console.log('data', data)\r\n    data.map(item=>{\r\n      if(item.status === true)\r\n      {return this.socket.on(item.name, async (data) =>{ \r\n        //console.log('event val connectEvent',data, this.isJson(data))\r\n        let isJson = this.isJson(data)\r\n        let val = this.state.message;\r\n        val.push({text:isJson? this.DataReturn(data):data, eventName:item.name, is_JSON:isJson, type:'receiver'})\r\n        this.setState({message:val})\r\n\r\n      });\r\n      }\r\n      else return true;\r\n    })\r\n  }\r\n\r\n  // this.DataReturn(data)\r\n  DataReturn(val) {\r\n    return new Function(\"return \" + val)();\r\n  };\r\n\r\n  isJson=(str)=>{\r\n    try {     \r\n      let dataval = (new Function(\"return [\" + str+ \"];\")())\r\n      return typeof(dataval) === 'object' ? true: false;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addEvent = (item) => {\r\n    this.setState({message:[]})\r\n    const is_active = this.socket ? this.socket.connected || this.state.status || this.state.message.length !== 0 : false;\r\n    if(is_active)\r\n    {\r\n      let values = this.state.data;\r\n      if(values.event.find(datares=> datares.name === item))\r\n      {return alert('event name already added')}\r\n\r\n      values.event.push({ name: item, status: true })\r\n      this.setState({ data: values, newevent: '' })\r\n      this.connectEvent(values.event)\r\n      // this.socket.on(item, async (data) =>{ \r\n      //   console.log('add event connect',data)\r\n      //   let val = this.state.message;\r\n      //   val.push({text:data, eventName:item, sendEvent:this.state.sendEvent})\r\n      //   this.setState({message:val})\r\n      // });\r\n    }\r\n    else{\r\n      alert('connect socket first')\r\n    }\r\n  }\r\n\r\n  handler = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  removeItem = (item) => {\r\n    let values = this.state.data;\r\n    let index = values.event.findIndex(val => val.name === item.name)\r\n    values.event.splice(index, 1)\r\n    this.setState({ data: values, message:[]})\r\n    this.socket.close();\r\n    this.startSocket(this.state.Url);\r\n  }\r\n\r\n  saveSocket = () => { //data\r\n    let data = this.state.data;\r\n    data.url = this.state.Url;\r\n    this.props.update(data);\r\n  }\r\n\r\n  // Send message\r\n  sendMesssage=()=>{\r\n    //console.log('send message',this.state.messageText)\r\n    const is_active = this.socket ? this.socket.connected || this.state.status || this.state.message.length !== 0 : false;\r\n    if(this.state.sendEvent && this.state.messageText !== '' && is_active)\r\n    {\r\n      this.socket.emit(this.state.sendEvent, this.state.messageText);\r\n      let isJson = this.isJson(this.state.messageText)\r\n      let val = this.state.message;\r\n      val.push({text:isJson? this.DataReturn(this.state.messageText):this.state.messageText,sendEvent:this.state.sendEvent, is_JSON:isJson, type:'sender'})\r\n      this.setState({message:val})\r\n    }\r\n    else alert(is_active ?'Please enter valid value in send event or message field':'connect socket')\r\n  }\r\n\r\n  clearAll=()=>{\r\n    this.setState({sendEvent:'', messageText:''})\r\n  }\r\n\r\n  changeEventStatus=(item, val)=>{\r\n    let values = this.state.data;\r\n    let index = values.event.findIndex(val => val.name === item.name)\r\n    values.event[index].status = val.target.checked;\r\n    this.setState({data:values, message:[]})\r\n    this.closeSocket()\r\n    this.startSocket(this.state.Url);\r\n  }\r\n\r\n  closeSocket=()=>{\r\n    const is_active = this.socket ? this.socket.connected || this.state.status || this.state.message.length !== 0 : false;\r\n    if(is_active)\r\n      this.socket.close();\r\n\r\n    this.setState({ status: false,  message:[]});\r\n      //console.log(this.socket)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.closeSocket()\r\n    //console.log('unmount')    \r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props, this.state, this.socket)\r\n    const { data, status, newevent, Url, error, sendEvent, messageText, message} = this.state;\r\n    const { show } = this.props;\r\n    const event = data.event ? data.event : [];\r\n    const is_active = this.socket ? this.socket.connected || status || message.length !== 0 : false;\r\n    return (\r\n      <div className={(show === data.id ? '' : 'd-none') + \" tabitem\"}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label htmlFor=\"socketurl\" className=\"m-0 d-none\"></label>\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\" id=\"btnGroupAddon\">\r\n                    <i className={(is_active ? 'text-primary' : 'text-gray') + \" material-icons\"}>signal_wifi_4_bar</i>\r\n                    {/* <!-- sync_alt --> */}\r\n                  </div>\r\n                </div>\r\n                <input id=\"socketurl\" type=\"text\" className=\"form-control\" placeholder=\"Socket Url\" value={Url} name=\"Url\" onChange={this.handler} />\r\n                <div className=\"input-group-append\">\r\n                  {is_active ? <button className=\"btn btn-silver\" type=\"button\" id=\"button-addon2\" onClick={() => this.closeSocket()}>Disconnect</button> : <button className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\" onClick={() => this.startSocket(Url)}>Connect</button>}\r\n                  {/* <button className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\" onClick={() => this.saveSocket(data)}>Save</button> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={(status ? '' : '') + \" row mx-n1\"}>\r\n            {/*d-none <!-- Left side --> */}\r\n            <div className=\"col-sm-4 col-md-3 p-1\">\r\n              <div className=\"p-2 bg-light leftside shadow-sm\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"senevent\">Send Message</label>\r\n                  <input id=\"senevent\" className=\"form-control\" placeholder=\"Event Name\" value={sendEvent} name=\"sendEvent\" onChange={this.handler} autoComplete=\"false\"/>\r\n                  {/* <!-- <small id=\"emailHelp\" className=\"form-text text-muted\">Select event.</small> --> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"messagetxt\">Message</label>\r\n                  <textarea id=\"messagetxt\" className=\"form-control\" rows=\"5\" placeholder=\"Message\" name=\"messageText\" value={messageText} onChange={this.handler}></textarea>\r\n                </div>\r\n                <div className=\"row mx-n1 \">\r\n                  <div className=\"col-8 mb-1 p-1\">\r\n                    <button className=\"btn btn-primary btn-block\" onClick={this.sendMesssage}>Send Message</button>\r\n                  </div>\r\n                  <div className=\"col-4 mb-1 p-1\">\r\n                    <button className=\"btn btn-danger btn-block\" onClick={this.clearAll}>Clear</button>\r\n                  </div>\r\n                  <div className=\"col-12 p-1\">\r\n                    <button className=\"btn text-danger p-0\" onClick={()=>this.setState({message:[]})}>Clear all message</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <label htmlFor=\"recevent\" className=\"m-0 d-none\"></label>\r\n                <div className=\"input-group \">\r\n                  <input id=\"recevent\" type=\"text\" className=\"form-control\" value={newevent} name=\"newevent\" placeholder=\"Event Name\" onChange={this.handler} />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-silver\" type=\"button\" onClick={() => this.addEvent(newevent)}>Add</button>\r\n                  </div>\r\n                </div>\r\n                <ul className=\"list-group mt-2\">\r\n                  {event.map((item, index) =>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center p-2\" key={index}>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <label className=\"m-0 checkboxItem\">\r\n                            <input type=\"checkbox\" defaultChecked={item.status} onChange={(e)=>this.changeEventStatus(item, e)}/>\r\n                            <i className=\"material-icons\">stop</i>\r\n                        </label>\r\n                        {item.name}\r\n                      </div>\r\n                      <span className=\"d-flex\"><i className=\"material-icons\" onClick={() => this.removeItem(item)}>clear</i></span>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- Right side --> */}\r\n            <div className=\"col-sm-8 col-md-9 p-1 \">\r\n              <div className=\"p-2 bg-light shadow-sm h-100\">\r\n                <div className=\"mesgs\">\r\n                  {message.map((item,index)=>{\r\n                  if(item.type === \"receiver\"){\r\n                  return <div className=\"incoming_msg\" key={index}>\r\n                    <div className=\"userImage\">\r\n                      <span style={{fontSize: '8px'}}>{'Receiver'  /*item.eventName.slice(0, 2)*/}</span>\r\n                    </div>\r\n                    <div className=\"msgbox\">\r\n                      {item.is_JSON ? <pre><ReactJson src={item.text} collapsed={true} /></pre>:\r\n                      <pre><code>{item.text}</code></pre>}\r\n                      {/* typeof(item.text)===\"object\" ? JSON.stringify(item.text):  */}\r\n                      <span className=\"info_data\">{item.eventName} | {item.sendEvent}</span> </div>\r\n                  </div>\r\n                  }\r\n                  else{\r\n                    return <div className=\"outgoing_msg\" key={index}>\r\n                      <div className=\"sent_msg\">\r\n                          {item.is_JSON ? <pre><ReactJson src={item.text} collapsed={true} /></pre>:\r\n                          <pre><code>{item.text}</code></pre>}\r\n                          <span className=\"info_data\">{item.sendEvent}</span> </div>\r\n                        <div className=\"userImage\">\r\n                          <span style={{fontSize: '9px'}}>{'Sender'  /*item.eventName.slice(0, 2)*/}</span>\r\n                        </div>\r\n                    </div>\r\n                  }\r\n                  })}\r\n\r\n                  {!is_active ? <pre className=\"alert alert-danger\" role=\"alert\">{JSON.stringify(error || \"Call Socket Url\")}</pre>:''}\r\n\r\n                  <div id=\"scroll\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className={(status ? 'd-none' : '') + \" row\"}>\r\n            <div className=\"col\">\r\n              <pre className=\"alert alert-danger\" role=\"alert\">{JSON.stringify(error || \"Call Socket Url\")}</pre>\r\n            </div>\r\n          </div> */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    global: state.Global,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SocketTabItem);\r\n","import React, { Component } from 'react';\r\n// import {Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n// import {dashboard} from './../../action/actions';\r\nimport SocketTabItem from '../../components/socket-tab-items/socketTabItems'\r\nimport './style.css';\r\n\r\nconst data = [\r\n    //{id:0, url:'http://10.10.30.110:4000/', event: [{ name: 'testSocketAck', status: true }]},\r\n    // { id: 0, url: 'http://10.10.30.110:8086', event: [{ name: 'ajitres', status: true }] },\r\n    //{ id: 1, url: 'http://10.10.30.110:9000/', event: [{ name: 'startRoomAck', status: true },{ name: 'broadcast', status: true },] },    \r\n]\r\n\r\nclass Dashboard extends Component {\r\n    state = { DataVal: data, active: '' };\r\n\r\n    componentDidMount() {\r\n      \r\n      if( this.state.DataVal.lenght > 0)\r\n      { this.setState({ active: this.state.DataVal[0].id}) }\r\n      else\r\n      { this.addNewTab() }\r\n\r\n    }\r\n\r\n    // remove Tab \r\n    removeTab = (item) => {\r\n        let data = this.state.DataVal;                \r\n        let index = data.findIndex(val => val.id === item.id)\r\n        data.splice(index, 1)\r\n        this.setState({ DataVal: data })        \r\n        if (data.findIndex(val => val.id === this.state.active) === -1) {\r\n            let activeItem = data.length > 1 ? data[index - 1].id : data[0].id;\r\n            setTimeout(() => this.activeTab(activeItem), 100);\r\n        }\r\n        else {\r\n            let currentTab = data[data.findIndex(val => val.id === this.state.active)].id;\r\n            setTimeout(() => this.activeTab(currentTab), 100);\r\n        }\r\n    }\r\n\r\n    // Add new Tab\r\n    addNewTab = () => {\r\n        let data = this.state.DataVal;\r\n        let id = Math.random();\r\n        data.push({ url: '', event: [], id: id })\r\n        this.setState({ DataVal: data, active: id })\r\n    }\r\n\r\n    // Update data\r\n    updateData = (item) => {\r\n        // console.log(item);\r\n        let data = this.state.DataVal;\r\n        let index = data.findIndex(val => val.id === item.id)\r\n        data[index].url = item.url;\r\n        this.setState({ DataVal: data })\r\n    }\r\n\r\n    // Active tab\r\n    activeTab=(id)=> this.setState({ active: id })\r\n\r\n    render() {\r\n        const { DataVal, active } = this.state;\r\n        return (\r\n            <div className=\"container-fluid pt-3 pb-3\">\r\n                <div className=\"card border-0\">\r\n                    <div className=\"card-header p-0 shadow-none bg-light\">\r\n                        <div className=\"tabboxs d-flex flex-row justify-content-start align-items-stretch\">\r\n                            <ul className=\"tabs d-flex flex-nowrap m-0 p-0\">\r\n                                {DataVal.map((item, index) => <li onClick={() => this.activeTab(item.id)} className={(active === item.id ? 'active' : '') + \" d-flex\"} key={item.id} title={item.url || 'Socket Url'}>\r\n                                    <span>{item.url || 'Socket Url'}</span>\r\n                                    {DataVal.length > 1 ? <i className=\"material-icons\" onClick={() => this.removeTab(item)}>clear</i>:''}\r\n                                </li>)}\r\n                            </ul>\r\n                            <div className=\"addtabs\">\r\n                                <i className=\"bg-silver text-white material-icons\" onClick={this.addNewTab}>add</i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body pl-0 pr-0\">\r\n                        {DataVal.map((item, index) =>\r\n                            <SocketTabItem data={item} show={active} update={this.updateData} key={item.id} className=\"customshow\" socketName={'socket'+item.id}/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        global: state.Global,\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);"],"sourceRoot":""}